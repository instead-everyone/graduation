//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Mooho.Base.Common;
using Mooho.Base.Model;
using accreditation.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;

namespace accreditation.IDataAccess
{
    /// <summary>
    /// 毕业要求数据访问接口
    /// </summary>
    public partial interface IGraduationReqDataAccess
    {
        /// <summary>
        /// 新增毕业要求
        /// </summary>
        /// <param name="graduationReq">毕业要求</param>
        /// <return>毕业要求</return>
        GraduationReq AddGraduationReq(GraduationReq graduationReq);

        /// <summary>
        /// 修改毕业要求
        /// </summary>
        /// <param name="graduationReq">毕业要求</param>
        /// <return>毕业要求</return>
        GraduationReq UpdateGraduationReq(GraduationReq graduationReq);

        /// <summary>
        /// 保存毕业要求
        /// </summary>
        /// <param name="graduationReq">毕业要求</param>
        /// <return>毕业要求</return>
        GraduationReq SaveGraduationReq(GraduationReq graduationReq);

        /// <summary>
        /// 删除毕业要求
        /// </summary>
        /// <param name="graduationReq">毕业要求</param>
        void RemoveGraduationReq(GraduationReq graduationReq);

        /// <summary>
        /// 根据条件删除毕业要求
        /// </summary>
        /// <param name="predicate">查询条件</param>
        void RemoveGraduationReq(Expression<Func<GraduationReq, bool>> predicate);

        /// <summary>
        /// 获取毕业要求
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <returns>毕业要求</returns>
        GraduationReq GetGraduationReq(long id);

        /// <summary>
        /// 获取毕业要求
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>毕业要求</returns>
        GraduationReq GetGraduationReqOrDefault(long id, GraduationReq defaultEntity = null);

        /// <summary>
        /// 根据条件获取毕业要求
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>毕业要求</returns>
        GraduationReq GetGraduationReq(Expression<Func<GraduationReq, bool>> predicate);

        /// <summary>
        /// 根据条件获取毕业要求
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>毕业要求</returns>
        GraduationReq GetGraduationReqOrDefault(Expression<Func<GraduationReq, bool>> predicate, GraduationReq defaultEntity = null);

        /// <summary>
        /// 根据条件获取毕业要求数量
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>毕业要求数量</returns>
        int CountGraduationReq(Expression<Func<GraduationReq, bool>> predicate);

        /// <summary>
        /// 根据条件统计毕业要求
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        int? SumGraduationReq(Expression<Func<GraduationReq, int?>> selecter, Expression<Func<GraduationReq, bool>> predicate);

        /// <summary>
        /// 根据条件统计毕业要求
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        decimal? SumGraduationReq(Expression<Func<GraduationReq, decimal?>> selecter, Expression<Func<GraduationReq, bool>> predicate);

        /// <summary>
        /// 根据条件查询毕业要求
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>毕业要求集合</returns>
        List<GraduationReq> QueryGraduationReq(Expression<Func<GraduationReq, bool>> predicate, Pages pages = null);

        /// <summary>
        /// 根据条件查询毕业要求
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="dynamicPredicate">动态查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>毕业要求集合</returns>
        List<GraduationReq> QueryGraduationReq(Expression<Func<GraduationReq, bool>> predicate, LambdaExpression dynamicPredicate, Pages pages = null);
    }
}
