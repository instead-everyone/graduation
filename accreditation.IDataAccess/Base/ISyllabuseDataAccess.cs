//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Mooho.Base.Common;
using Mooho.Base.Model;
using accreditation.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;

namespace accreditation.IDataAccess
{
    /// <summary>
    /// 教学大纲数据访问接口
    /// </summary>
    public partial interface ISyllabuseDataAccess
    {
        /// <summary>
        /// 新增教学大纲
        /// </summary>
        /// <param name="syllabuse">教学大纲</param>
        /// <return>教学大纲</return>
        Syllabuse AddSyllabuse(Syllabuse syllabuse);

        /// <summary>
        /// 修改教学大纲
        /// </summary>
        /// <param name="syllabuse">教学大纲</param>
        /// <return>教学大纲</return>
        Syllabuse UpdateSyllabuse(Syllabuse syllabuse);

        /// <summary>
        /// 保存教学大纲
        /// </summary>
        /// <param name="syllabuse">教学大纲</param>
        /// <return>教学大纲</return>
        Syllabuse SaveSyllabuse(Syllabuse syllabuse);

        /// <summary>
        /// 删除教学大纲
        /// </summary>
        /// <param name="syllabuse">教学大纲</param>
        void RemoveSyllabuse(Syllabuse syllabuse);

        /// <summary>
        /// 根据条件删除教学大纲
        /// </summary>
        /// <param name="predicate">查询条件</param>
        void RemoveSyllabuse(Expression<Func<Syllabuse, bool>> predicate);

        /// <summary>
        /// 获取教学大纲
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <returns>教学大纲</returns>
        Syllabuse GetSyllabuse(long id);

        /// <summary>
        /// 获取教学大纲
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>教学大纲</returns>
        Syllabuse GetSyllabuseOrDefault(long id, Syllabuse defaultEntity = null);

        /// <summary>
        /// 根据条件获取教学大纲
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>教学大纲</returns>
        Syllabuse GetSyllabuse(Expression<Func<Syllabuse, bool>> predicate);

        /// <summary>
        /// 根据条件获取教学大纲
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>教学大纲</returns>
        Syllabuse GetSyllabuseOrDefault(Expression<Func<Syllabuse, bool>> predicate, Syllabuse defaultEntity = null);

        /// <summary>
        /// 根据条件获取教学大纲数量
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>教学大纲数量</returns>
        int CountSyllabuse(Expression<Func<Syllabuse, bool>> predicate);

        /// <summary>
        /// 根据条件统计教学大纲
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        int? SumSyllabuse(Expression<Func<Syllabuse, int?>> selecter, Expression<Func<Syllabuse, bool>> predicate);

        /// <summary>
        /// 根据条件统计教学大纲
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        decimal? SumSyllabuse(Expression<Func<Syllabuse, decimal?>> selecter, Expression<Func<Syllabuse, bool>> predicate);

        /// <summary>
        /// 根据条件查询教学大纲
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>教学大纲集合</returns>
        List<Syllabuse> QuerySyllabuse(Expression<Func<Syllabuse, bool>> predicate, Pages pages = null);

        /// <summary>
        /// 根据条件查询教学大纲
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="dynamicPredicate">动态查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>教学大纲集合</returns>
        List<Syllabuse> QuerySyllabuse(Expression<Func<Syllabuse, bool>> predicate, LambdaExpression dynamicPredicate, Pages pages = null);
    }
}
