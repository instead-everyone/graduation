//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Mooho.Base.Common;
using Mooho.Base.Model;
using accreditation.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;

namespace accreditation.IDataAccess
{
    /// <summary>
    /// 毕业指标点数据访问接口
    /// </summary>
    public partial interface IGraduationPointDataAccess
    {
        /// <summary>
        /// 新增毕业指标点
        /// </summary>
        /// <param name="graduationPoint">毕业指标点</param>
        /// <return>毕业指标点</return>
        GraduationPoint AddGraduationPoint(GraduationPoint graduationPoint);

        /// <summary>
        /// 修改毕业指标点
        /// </summary>
        /// <param name="graduationPoint">毕业指标点</param>
        /// <return>毕业指标点</return>
        GraduationPoint UpdateGraduationPoint(GraduationPoint graduationPoint);

        /// <summary>
        /// 保存毕业指标点
        /// </summary>
        /// <param name="graduationPoint">毕业指标点</param>
        /// <return>毕业指标点</return>
        GraduationPoint SaveGraduationPoint(GraduationPoint graduationPoint);

        /// <summary>
        /// 删除毕业指标点
        /// </summary>
        /// <param name="graduationPoint">毕业指标点</param>
        void RemoveGraduationPoint(GraduationPoint graduationPoint);

        /// <summary>
        /// 根据条件删除毕业指标点
        /// </summary>
        /// <param name="predicate">查询条件</param>
        void RemoveGraduationPoint(Expression<Func<GraduationPoint, bool>> predicate);

        /// <summary>
        /// 获取毕业指标点
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <returns>毕业指标点</returns>
        GraduationPoint GetGraduationPoint(long id);

        /// <summary>
        /// 获取毕业指标点
        /// </summary>
        /// <param name="id">唯一编号</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>毕业指标点</returns>
        GraduationPoint GetGraduationPointOrDefault(long id, GraduationPoint defaultEntity = null);

        /// <summary>
        /// 根据条件获取毕业指标点
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>毕业指标点</returns>
        GraduationPoint GetGraduationPoint(Expression<Func<GraduationPoint, bool>> predicate);

        /// <summary>
        /// 根据条件获取毕业指标点
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="defaultEntity">默认值</param>
        /// <returns>毕业指标点</returns>
        GraduationPoint GetGraduationPointOrDefault(Expression<Func<GraduationPoint, bool>> predicate, GraduationPoint defaultEntity = null);

        /// <summary>
        /// 根据条件获取毕业指标点数量
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <returns>毕业指标点数量</returns>
        int CountGraduationPoint(Expression<Func<GraduationPoint, bool>> predicate);

        /// <summary>
        /// 根据条件统计毕业指标点
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        int? SumGraduationPoint(Expression<Func<GraduationPoint, int?>> selecter, Expression<Func<GraduationPoint, bool>> predicate);

        /// <summary>
        /// 根据条件统计毕业指标点
        /// </summary>
        /// <param name="selecter">统计字段</param>
        /// <param name="predicate">查询条件</param>
        /// <returns>统计值</returns>
        decimal? SumGraduationPoint(Expression<Func<GraduationPoint, decimal?>> selecter, Expression<Func<GraduationPoint, bool>> predicate);

        /// <summary>
        /// 根据条件查询毕业指标点
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>毕业指标点集合</returns>
        List<GraduationPoint> QueryGraduationPoint(Expression<Func<GraduationPoint, bool>> predicate, Pages pages = null);

        /// <summary>
        /// 根据条件查询毕业指标点
        /// </summary>
        /// <param name="predicate">查询条件</param>
        /// <param name="dynamicPredicate">动态查询条件</param>
        /// <param name="pages">分页信息</param>
        /// <returns>毕业指标点集合</returns>
        List<GraduationPoint> QueryGraduationPoint(Expression<Func<GraduationPoint, bool>> predicate, LambdaExpression dynamicPredicate, Pages pages = null);
    }
}
